1)#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void merge(int arr[], int l, int m, int r) {
    int i, j, k;
    int n1 = m - l + 1;
    int n2 = r - m;

    int L[n1], R[n2];

    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1 + j];

    i = 0;
    j = 0;
    k = l;

    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}

void merge_sort(int arr[], int l, int r) {
    if (l < r) {
        int m = l + (r - l) / 2;
        merge_sort(arr, l, m);
        merge_sort(arr, m + 1, r);
        merge(arr, l, m, r);
    }
}

double medir_tempo(int arr[], int n) {
    clock_t inicio, fim;
    inicio = clock();
    merge_sort(arr, 0, n - 1);
    fim = clock();
    return ((double)(fim - inicio)) / CLOCKS_PER_SEC;
}

void gerar_vetores(int tamanho, int **aleatorio, int **crescente, int **decrescente) {
    *aleatorio = (int *)malloc(tamanho * sizeof(int));
    *crescente = (int *)malloc(tamanho * sizeof(int));
    *decrescente = (int *)malloc(tamanho * sizeof(int));

    for (int i = 0; i < tamanho; i++) {
        (*aleatorio)[i] = rand() % tamanho;
    }

    for (int i = 0; i < tamanho; i++) {
        (*crescente)[i] = (*aleatorio)[i];
    }

    for (int i = 0; i < tamanho; i++) {
        (*decrescente)[i] = (*aleatorio)[i];
    }

    merge_sort(*crescente, 0, tamanho - 1);
    merge_sort(*decrescente, 0, tamanho - 1);
    for (int i = 0; i < tamanho / 2; i++) {
        int temp = (*decrescente)[i];
        (*decrescente)[i] = (*decrescente)[tamanho - 1 - i];
        (*decrescente)[tamanho - 1 - i] = temp;
    }
}

int main() {
    srand(time(NULL));

    int tamanhos[] = {1000, 2000, 10000, 20000, 100000, 200000};
    int n_tamanhos = sizeof(tamanhos) / sizeof(tamanhos[0]);

    printf("%-20s%-20s%-20s%-20s\n", "Número de Elementos", "Aleatório", "Crescente", "Decrescente");

    for (int i = 0; i < n_tamanhos; i++) {
        int tamanho = tamanhos[i];
        int *vetor_aleatorio, *vetor_crescente, *vetor_decrescente;

        gerar_vetores(tamanho, &vetor_aleatorio, &vetor_crescente, &vetor_decrescente);

        double tempo_aleatorio = medir_tempo(vetor_aleatorio, tamanho);
        double tempo_crescente = medir_tempo(vetor_crescente, tamanho);
        double tempo_decrescente = medir_tempo(vetor_decrescente, tamanho);

        printf("%-20d%-20.6f%-20.6f%-20.6f\n", tamanho, tempo_aleatorio, tempo_crescente, tempo_decrescente);

        free(vetor_aleatorio);
        free(vetor_crescente);
        free(vetor_decrescente);
    }

    return 0;
}
2)#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void bubble_sort(int arr[], int n) {
    for (int i = 0; i < n-1; i++) {
        for (int j = 0; j < n-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
}

double medir_tempo(int arr[], int n) {
    clock_t inicio, fim;
    inicio = clock();
    bubble_sort(arr, n);
    fim = clock();
    return ((double)(fim - inicio)) / CLOCKS_PER_SEC;
}

void gerar_vetores(int tamanho, int **aleatorio, int **crescente, int **decrescente) {
    *aleatorio = (int *)malloc(tamanho * sizeof(int));
    *crescente = (int *)malloc(tamanho * sizeof(int));
    *decrescente = (int *)malloc(tamanho * sizeof(int));

    for (int i = 0; i < tamanho; i++) {
        (*aleatorio)[i] = rand() % tamanho;
    }

    for (int i = 0; i < tamanho; i++) {
        (*crescente)[i] = (*aleatorio)[i];
    }

    for (int i = 0; i < tamanho; i++) {
        (*decrescente)[i] = (*aleatorio)[i];
    }

    bubble_sort(*crescente, tamanho);
    bubble_sort(*decrescente, tamanho);
    for (int i = 0; i < tamanho / 2; i++) {
        int temp = (*decrescente)[i];
        (*decrescente)[i] = (*decrescente)[tamanho - 1 - i];
        (*decrescente)[tamanho - 1 - i] = temp;
    }
}

int main() {
    srand(time(NULL));

    int tamanhos[] = {1000, 2000, 10000, 20000, 100000, 200000};
    int n_tamanhos = sizeof(tamanhos) / sizeof(tamanhos[0]);

    printf("%-20s%-20s%-20s%-20s\n", "Número de Elementos", "Aleatório", "Crescente", "Decrescente");

    for (int i = 0; i < n_tamanhos; i++) {
        int tamanho = tamanhos[i];
        int *vetor_aleatorio, *vetor_crescente, *vetor_decrescente;

        gerar_vetores(tamanho, &vetor_aleatorio, &vetor_crescente, &vetor_decrescente);

        double tempo_aleatorio = medir_tempo(vetor_aleatorio, tamanho);
        double tempo_crescente = medir_tempo(vetor_crescente, tamanho);
        double tempo_decrescente = medir_tempo(vetor_decrescente, tamanho);

        printf("%-20d%-20.6f%-20.6f%-20.6f\n", tamanho, tempo_aleatorio, tempo_crescente, tempo_decrescente);

        free(vetor_aleatorio);
        free(vetor_crescente);
        free(vetor_decrescente);
    }

    return 0;
}
3)
